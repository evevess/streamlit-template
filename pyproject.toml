[project]
name = "streamlit-app-template"
version = "0.1.0"
description = "A production-ready Streamlit template with type checking and pre-commit"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Your Name", email = "susu.z@adc-consulting.com" },
]
license = { text = "MIT" }
keywords = ["streamlit", "data-science", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
]

dependencies = [
    "azure-storage-blob>=12.25.1",
    "pandas>=2.2.3",
    "scikit-learn>=1.5.2",
    "streamlit>=1.39.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.9",
    "pytest>=8.0.0",
    "mypy>=1.9.0",
    "pandas-stubs>=2.2.0",
    "types-requests>=2.31.0",
    "pre-commit>=3.0.0",
]

[tool.ruff]
line-length = 88
select = [
    "E", "W", "F", "I", "B", "C", "UP", "PL", "RUF",
    "PT",  # pytest style
    "RET",  # return style
]
ignore = [
    "E501",  # line length handled by formatter
    "PLR2004",  # magic values
]
target-version = "py310"
unfixable = ["B904"]  # Never autofix these rules

[tool.ruff.isort]
known-first-party = ["app"]  # Changed from streamlit_app to match your structure
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "PT011", "PT012"]  # Allow asserts and pytest fixtures

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "streamlit.*",
    "sklearn.*"
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ["py310"]
skip-magic-trailing-comma = false
